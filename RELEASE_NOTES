SheafSystem Release Notes Version 

3.4.0.1 01/31/2014

	1.	The id space construction mechanism has been replace with a static new_space() constructor on the id space handles and a static new_interval() constructor on the id space intervals.  Handle classes have been implemented for all explicit id space states.
	2.	The “using namespace std” statements have been removed from all header files.  All c++ standard classes are fully qualified with “std::” in the header files.  All source files that use standard classes have a “using namespace std” after the #include statements.  Function definitions in the the source files were made consistent with the function declarations in the header files (i.e., the function signatures have namespace qualifiers for c++ standard classes).
	3.	hash_set, hash_map, and hash_mulitmap have been replaced by unordered_set, unordered_map and unordered_multimap, respectively.  Since gcc-4.2.2 still puts the unordered classes in the std::tr1 namespace, a namespace alias has been created for the unordered classes.  This namespace alias is “unordered::”.  When using unordered classes, qualify the class with “unordered::” and when using an unordered class in the source file, add “using namespace unordered”.  This is done for portablity.  The user can directly use std:: or std::tr1 but the code may not be portable.
	4.	std::slist has been replaced by sheaf::singly_linked_list.  singly_linked_list is a wrapper for forward_list.  If forward_list is not available, singly_linked_list wraps slist.  Only the interface common to forward_list in gcc, forward_list in Windows and slist is supported by singly_linked_list.
	5.	SheafSystem has been updated to build with 4.4 series of GCC.  SheafSystem also builds with the 4.2 series of GCC and the c++ compiler in VisualStudio 2010.
